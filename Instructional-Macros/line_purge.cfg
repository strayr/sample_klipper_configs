### _SIMPLE_LINE_PURGE_X ###

# This does some maths to calculate what to do rather than just spitting out gcode
# it's adaptable and i use this to print purge lines on the handle of my beds on some
# some printers, or otherwise in areas that are unprintable

# You can run this with a cold printer and it will just output the calculations.

# It Starts at (start_x, starty), moves x_length in the +x direction then returns
# width in +x with a second line.

# It moves at vol_flow mm3/s this should be a reasonalby high percentage of your hotend's flow rate
# the faster, the better it is at catching debris from old filament, but if it grinds filament it
# will mess up your first layer. 2/3 of your PLA max vol flow or 90% of your PETG max vol flow rate
# is a good guess to start with.

# It runs all of its motion inside of a  SAVE_GCODE_STATE, RESTORE_GCODE_STATE block. This means
# any changes we make like switching to relative extrusion and relative position are reverted to
# whatever they were before the macro ran and we don't need to worry about waht printer state we
# were supposed to restore.


# This is needed for m118
[respond]

[gcode_macro _SIMPLE_LINE_PURGE_X]
gcode:
    # Adjust these to suit
    {% set start_x = 0 %} # Lefmost position of purge line
    {% set start_y = 0 %} # Frontmost position of purge line
    {% set x_length = 100 %} # length of line
    {% set vol_flow = 6 %} # vol flow rate of purge in mm3/s, 10 is good for a v6.
    {% set cross_section = 0.5 %} # 0.5 is a the default klipper max, it's a good value
    {% set z_height = 0.4 %} # This is the height of the purge
    {% set retraction = 0.4 %} #TODO use firmware retraction and use this as a backup
    {% set z_fiddle = 0 %} # This is aprox Z height of purge zone if the bed is warped, prefer a taller purge
    {% set end_x = start_x + x_length %}
    {% set volume = x_length * cross_section %} # this is the vol for one line
    {% set e_length = volume / 2.4 %} ; each mm of fillament is (1.75/2)^2 * pi ~= 2.4 (mm^3)
    {% set time = volume / vol_flow %}
    {% set speed = x_length / time %}
    {% set feed = speed * 60 %} # gcode is mm/min
    {% set width = cross_section / z_height  %}

    # Get some information from the printer rather than guessing.
    # If the printer is set up to move faster than it can safely manage, it will fail.
    {% set travel_speed = printer.toolhead.max_velocity * 0.7 * 60 %}
    {% set z_travel_speed = printer.configfile.settings.printer.max_z_velocity * 60 %}
    {% set min_extrude_t = printer.configfile.settings.extruder.min_extrude_temp %}
    {% set target_t = printer.extruder.target %}

    
    M118 Calculating
    M118 Volume: {volume *2 } mm3 # We do 2 lines
    M118 Filament length: {e_length * 2}
    M118 Feedrate: {speed} mm/s F{feed}
    M118 line width = {width}, purge danger zone Y < {start_y+(width*2)}

    {% if target_t < min_extrude_t %}
        M118 Extruder cold, will not print"
    {% else %}
        SAVE_GCODE_STATE NAME=purge
        G90 #absloute positioning
        G92 E0
        G1 X{start_x} Y{start_y} F{travel_speed}
        G1 Z{z_height+z_fiddle}
        G91 #relative pos
        M83 # relative extrusion
        G1 X{x_length} E{e_length} F{feed}
        G1 Y{width} F{travel_speed}
        G1 X-{x_length} E{e_length} F{feed}
        G1 Y{width} F{travel_speed}
        G92 E0 #reset extruder
        RESTORE_GCODE_STATE NAME=purge
        M118 Intro complete
    {% endif %}